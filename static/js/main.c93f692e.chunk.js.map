{"version":3,"sources":["components/Header.js","components/TodoModal.js","components/TodoList.js","components/TodoInput.js","components/App.js","index.js"],"names":["Header","react_default","a","createElement","className","href","TodoModal","props","modalStatus","clickedTodo","modalClose","handleDeleted","modalEdit","tabIndex","role","style","display","type","data-dismiss","aria-label","onClick","aria-hidden","TodoList","_useState","useState","_useState2","Object","slicedToArray","completedTodo","setComplete","todo","handleEdit","handleClickTodo","handleComplete","console","log","data-target","components_TodoModal","TodoInput","handleChange","handleSubmit","editTodo","onSubmit","placeholder","value","onChange","id","Wrapper","styled","div","_templateObject","Container","_templateObject2","Ul","ul","_templateObject3","App","todos","setTodos","_useState3","uuid","_useState4","setId","_useState5","_useState6","setTodo","_useState7","_useState8","setEdit","_useState9","_useState10","setClickedTodo","_useState11","_useState12","setModal","components_Header","components_TodoInput","e","target","preventDefault","newTodo","updatedTodos","concat","toConsumableArray","map","components_TodoList","key","filteredTodos","filter","selectedTodo","find","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.c93f692e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          React TodoList\r\n        </a>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction TodoModal(props) {\r\n  const {\r\n    modalStatus,\r\n    clickedTodo,\r\n    modalClose,\r\n    handleDeleted,\r\n    modalEdit\r\n  } = props;\r\n  const modalShowing = { display: \"block\" };\r\n  const modalHiding = { display: \"none\" };\r\n  return (\r\n    <div\r\n      className=\"modal\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      style={modalStatus ? modalShowing : modalHiding}\r\n    >\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n              onClick={modalClose}\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <p className=\"font-weight-bold\">{clickedTodo}</p>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success text-white\"\r\n              onClick={modalEdit}\r\n            >\r\n              수정\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger text-white\"\r\n              onClick={handleDeleted}\r\n            >\r\n              삭제\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoModal;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport TodoModal from \"./TodoModal\";\r\n\r\nfunction TodoList(props) {\r\n  const [completedTodo, setComplete] = useState(false);\r\n  const {\r\n    todo,\r\n    handleDeleted,\r\n    handleEdit,\r\n    handleClickTodo,\r\n\r\n    modalEdit,\r\n    clickedTodo,\r\n    modalStatus,\r\n    modalClose\r\n  } = props;\r\n\r\n  function handleComplete() {\r\n    setComplete(!completedTodo);\r\n    console.log(completedTodo);\r\n  }\r\n  return (\r\n    <li\r\n      className=\"list-group-item d-flex justify-content-between my-2 row\"\r\n      data-target=\"#exampleModalCenter\"\r\n    >\r\n      {completedTodo ? (\r\n        <p className=\"text-muted text-decoration-line\">{todo}</p>\r\n      ) : (\r\n        <p className=\"font-weight-bold\">{todo}</p>\r\n      )}\r\n\r\n      <div className=\"todo-icon\">\r\n        <button\r\n          className=\"btn btn-outline-secondary btn-success text-white btn-sm\"\r\n          onClick={handleEdit}\r\n        >\r\n          수정\r\n        </button>\r\n        <button\r\n          className=\"btn btn-outline-secondary btn-danger text-white mx-1 btn-sm\"\r\n          onClick={handleDeleted}\r\n        >\r\n          삭제\r\n        </button>\r\n        <button\r\n          className=\"btn btn-outline-secondary btn-danger text-white mr-1 btn-sm\"\r\n          onClick={handleClickTodo}\r\n        >\r\n          보기\r\n        </button>\r\n        <button\r\n          className=\"btn btn-outline-secondary btn-primary text-white btn-sm\"\r\n          onClick={handleComplete}\r\n        >\r\n          완료\r\n        </button>\r\n      </div>\r\n      <TodoModal\r\n        modalStatus={modalStatus}\r\n        modalClose={modalClose}\r\n        modalEdit={modalEdit}\r\n        clickedTodo={clickedTodo}\r\n        handleComplete={handleComplete}\r\n        completedTodo={completedTodo}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\n\r\n//함수형 컴포넌트이므로 첫번째 arg가 props가 됌\r\nfunction TodoInput(props) {\r\n  //부모 컴포넌트에서 전달받은 props를 불러옴\r\n  const { todo, handleChange, handleSubmit, editTodo } = props;\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"input-group\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"새로운 할 일\"\r\n          value={todo}\r\n          onChange={handleChange}\r\n        />\r\n        <div className=\"input-group-append\" id=\"button-addon\">\r\n          <button\r\n            //editTodo의 값이 true(수정하는 상태)일 때 버튼의 텍스트를 '수정'으로, 버튼의 색깔을 초록색으로 변경\r\n            className={\r\n              editTodo\r\n                ? \"btn btn-outline-secondary bg-success text-white\"\r\n                : \"btn btn-outline-secondary\"\r\n            }\r\n            type=\"submit\"\r\n          >\r\n            {editTodo ? \"수정\" : \"입력\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoInput;\r\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport Header from \"./Header\";\nimport TodoList from \"./TodoList\";\nimport TodoInput from \"./TodoInput\";\n\nimport uuid from \"uuid\";\n\nfunction App() {\n  //함수형 컴포넌트 사용하므로 useState 사용\n  const [todos, setTodos] = useState([]);\n  //uuid로 새로운 무작위 id값 생성\n  const [id, setId] = useState(uuid());\n  const [todo, setTodo] = useState(\"\");\n\n  const [editTodo, setEdit] = useState(false);\n  const [clickedTodo, setClickedTodo] = useState(\"\");\n  const [modalStatus, setModal] = useState(false);\n\n  function handleChange(e) {\n    //input에 입력된 현재 값을 state값으로 지정\n    setTodo(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    //input에서 입력 시 새로고침 방지\n    e.preventDefault();\n\n    //새로 추가될 todo를 newTodo 변수로 정의\n    const newTodo = {\n      id: id,\n      todo: todo\n    };\n\n    //추가된 newTodo을 기존의 todos 배열에 추가\n    const updatedTodos = [...todos, newTodo];\n\n    //newTodo 추가된 후 setState\n    setTodos(updatedTodos);\n    setId(uuid());\n    setTodo(\"\");\n    setEdit(false);\n  }\n\n  function handleDeleted(id) {\n    //filter 메소드를 이용하여 삭제하려는 todo의 id값과 같은 값을 가진 todo를 필터링\n    const filteredTodos = todos.filter(todo => todo.id !== id);\n    //필터링된 투두리스트를 setState\n    setTodos(filteredTodos);\n  }\n\n  function handleEdit(id) {\n    //위의 삭제 함수와 같이 필터링 진행\n    const filteredTodos = todos.filter(todo => todo.id !== id);\n    //수정하고자하는 todo의 id 값 추출\n    const selectedTodo = todos.find(todo => todo.id === id);\n\n    //필터링된 todolist setState\n    setTodos(filteredTodos);\n    //id는 그대로\n    setId(id);\n    //선택된 todo가 input 창에 입력됌\n    setTodo(selectedTodo.todo);\n    //editTodo의 값을 true로 변경\n    setEdit(true);\n  }\n\n  function handleClickTodo(id) {\n    const selectedTodo = todos.find(todo => todo.id === id);\n    //선택된 todo를 clickedTodo(state)로 지정\n    setClickedTodo(selectedTodo.todo);\n    setId(id);\n    setModal(true);\n    console.log(id);\n    console.log(todos);\n  }\n  function modalEdit(id) {\n    const filteredTodos = todos.filter(todo => todo.id !== id);\n\n    setTodos(filteredTodos);\n    setTodo(clickedTodo);\n    setId(id);\n    setEdit(true);\n    setModal(false);\n  }\n  function modalClose() {\n    setClickedTodo(\"\");\n    setModal(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <Header />\n        <Container>\n          <TodoInput\n            todo={todo}\n            handleChange={handleChange}\n            handleSubmit={handleSubmit}\n            editTodo={editTodo}\n          />\n          <Ul className=\"list-group\">\n            {todos.map(todo => {\n              return (\n                <TodoList\n                  key={todo.id}\n                  todo={todo.todo}\n                  editTodo={editTodo}\n                  handleDeleted={() => handleDeleted(todo.id)}\n                  handleEdit={() => handleEdit(todo.id)}\n                  handleClickTodo={() => handleClickTodo(todo.id)}\n                  modalEdit={() => modalEdit(todo.id)}\n                  clickedTodo={clickedTodo}\n                  modalStatus={modalStatus}\n                  modalClose={modalClose}\n                />\n              );\n            })}\n          </Ul>\n        </Container>\n      </Wrapper>\n    </div>\n  );\n}\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  outline: none;\n`;\nconst Container = styled.div`\n  width: 480px;\n  height: 650px;\n  background-color: #ecf0f1;\n  position: relative;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  border-radius: 30px;\n  padding: 30px;\n  box-sizing: border-box;\n`;\nconst Ul = styled.ul`\n  overflow-x: hidden;\n  width: 420px;\n  height: 550px;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}